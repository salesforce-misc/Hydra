[versions]
arrow = "1.1.6-alpha.91"
suspendapp="0.4.0"
hikari="5.0.1"
cohort="2.0.2"
cohort-ktor="1.7.3"
ktor = "2.3.1"
sqldelight="2.0.0-SNAPSHOT"
postgresql="42.6.0"
rabbitmq-client = "5.17.0"
ktor-rabbitmq = "0.4.0"
jackson-kotlin = "2.15.2"
java-vavr = "0.10.4"
kotlin-vavr = "0.10.2"
jetbrains-annotations = "24.0.1"
typeTools = "0.6.3"
kover = "0.7.0"
kotlin = "1.9.0-Beta"
moshix = "0.22.1"
kotest = "5.6.2"
spotbugs = "5.0.14"
lombok = "8.0.1"
testLogger = "3.2.0"
assertj-core = "3.24.2"
assertj-vavr = "0.4.2"
reflection-util = "2.14.0"
vador = "1.0.1"
http4k = "4.45.0.0"
kotlin-logging = "3.0.5"
apache-commons-lang3 = "3.12.0"
graal-sdk = "22.3.2"
underscore = "1.90"
kotlin-faker = "1.14.0"
immutables = "2.9.3"
mockito = "5.3.1"
# Common dependencies
junit = "5.9.3"
detekt = "1.23.0"
spotless = "6.19.0"
apache-log4j = "2.20.0"

[libraries]
java-vavr = { module = "io.vavr:vavr", version.ref = "java-vavr" }
kotlin-vavr = { module = "io.vavr:vavr-kotlin", version.ref = "kotlin-vavr" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
typeTools = { module = "net.jodah:typetools", version.ref = "typeTools" }
reflection-util = { module = "de.cronn:reflection-util", version.ref = "reflection-util" }
testLogger-gradle = { module = "com.adarshr.test-logger:com.adarshr.test-logger.gradle.plugin", version.ref = "testLogger" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
assertj-vavr = { module = "org.assertj:assertj-vavr", version.ref = "assertj-vavr" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
vador = { module = "com.salesforce.vador:vador", version.ref = "vador" }
vador-matchers = { module = "com.salesforce.vador:vador-matchers", version.ref = "vador" }
moshix-adapters = { module = "dev.zacsweers.moshix:moshi-adapters", version.ref = "moshix" }
http4k-core = { module = "org.http4k:http4k-core", version.ref = "http4k" }
http4k-client-apache = { module = "org.http4k:http4k-client-apache", version.ref = "http4k" }
http4k-format-moshi = { module = "org.http4k:http4k-format-moshi", version.ref = "http4k" }
apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons-lang3" }
graal-sdk = { module = "org.graalvm.sdk:graal-sdk", version.ref = "graal-sdk" }
graal-js = { module = "org.graalvm.js:js", version.ref = "graal-sdk" }
underscore = { module = "com.github.javadev:underscore", version.ref = "underscore" }
kotlin-faker = { module = "io.github.serpro69:kotlin-faker", version.ref = "kotlin-faker" }
immutables-value = { module = "org.immutables:value", version.ref = "immutables" }
immutables-builder = { module = "org.immutables:builder", version.ref = "immutables" }
immutables-value-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
kotlin-logging-jvm = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "apache-log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "apache-log4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "apache-log4j" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
suspendapp = { module = "io.arrow-kt:suspendapp", version.ref = "suspendapp" }
suspendapp-ktor = { module = "io.arrow-kt:suspendapp-ktor", version.ref = "suspendapp" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-html = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
hikari = { module = "com.zaxxer:HikariCP", version.ref="hikari" }
cohort-core = { module="com.sksamuel.cohort:cohort-core", version.ref="cohort" }
cohort-ktor = { module="com.sksamuel.cohort:cohort-ktor2", version.ref="cohort-ktor" }
cohort-hikari = { module="com.sksamuel.cohort:cohort-hikari", version.ref="cohort" }
sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref="sqldelight" }
sqldelight-postgresql = { module = "app.cash.sqldelight:postgresql-dialect", version.ref="sqldelight" }
postgresql = { module="org.postgresql:postgresql", version.ref="postgresql" }
rabbitmq-client = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq-client" }
ktor-rabbitmq = { module = "com.github.JUtupe:ktor-rabbitmq", version.ref = "ktor-rabbitmq" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-kotlin"}
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito"}

# Gradle plugins
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
spotbugs-gradle = { module = "com.github.spotbugs.snom:spotbugs-gradle-plugin", version.ref = "spotbugs" }
kover-gradle = { module = "org.jetbrains.kotlinx.kover:org.jetbrains.kotlinx.kover.gradle.plugin", version.ref = "kover" }
ktor-gradle = { module = "io.ktor.plugin:io.ktor.plugin.gradle.plugin", version.ref = "ktor" }

[bundles]
arrow = ["arrow-core", "arrow-fx"]
suspendapp = ["suspendapp", "suspendapp-ktor"]
ktor-server = [
    "ktor-server-core",
    "ktor-server-cors",
    "ktor-server-content-negotiation",
    "ktor-server-defaultheaders",
    "ktor-server-netty",
    "ktor-server-auth",
    "ktor-serialization-json"
]
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-serialization"
]
kotest = [
    "kotest-assertions-core",
    "kotest-frameworkEngine",
    "kotest-property",
    "kotest-runnerJUnit5",
]
cohort = [
    "cohort-core",
    "cohort-ktor",
    "cohort-hikari"
]
junit = ["junit-jupiter", "junit-engine"]
vador = ["vador", "vador-matchers"]
http4k = ["http4k-core", "http4k-client-apache", "http4k-format-moshi"]
apache-log4j = ["log4j-api", "log4j-core", "log4j-slf4j2-impl"]
kotlin-logging = ["kotlin-logging-jvm", "log4j-api", "log4j-core", "log4j-slf4j2-impl"]

[plugins]
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
spotbugs = { id = "com.github.spotbugs", version.ref = "spotbugs" }
lombok = { id = "io.freefair.lombok", version.ref = "lombok" }
testLogger = { id = "com.adarshr.test-logger", version.ref = "testLogger" }
moshix = { id = "dev.zacsweers.moshix", version.ref = "moshix" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" } 
